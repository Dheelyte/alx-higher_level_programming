===============================
How to use 2-matrix_divided.txt
===============================

This module contains a function that divides all elements of a matrix.
 called ```matrix_divided```

Usage
=====

```matrix_divided``` returns the division of a matrix (first argument) by a number (second argument)

Matrix must be a list of lists of integers or floats

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 2.3, "d"], [3, 1, 3.1]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix_divided([2, 4, 1], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix_divided(2, 1)
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix must be of the same size

::

	>>> matrix_divided([[1, 2, 3], [1, 2]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Argument ```div``` must be a number (integer or float)

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hi")
	Traceback (most recent call last):
	TypeError: div must be a number

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('nan'))
        Traceback (most recent call last):
        TypeError: div must be a number

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
        Traceback (most recent call last):
        TypeError: div must be a number

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
        Traceback (most recent call last):
        TypeError: div must be a number

```div``` canâ€™t be equal to 0

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

All elements of the matrix should be divided by div, rounded to 2 decimal places

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
