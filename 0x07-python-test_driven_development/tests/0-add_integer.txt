===========================
How to use 0-add_integer.py
===========================

This module contains a function called ```add_integer()```

Usage
=====

```add_integer()``` returns the addition of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

::

Numbers
=======

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(3, 4)
	7

::

	>>> add_integer(2, -3)
	-1

The function also works with floating-point values.

::

	>>> add_integer(2.0, 3.0)
	5

Note that floats are casted to ints before addition is performed.

::

	>>> add_integer(0.5, 2.9)
	2

::

	>>> add_integer(-0.5, -2.9)
	-2

Floating and non-floating point values can be combined.

::

	>>> add_integer(1.5, -3)
	-2

The second argument is optional - by default, it is 98.

::

	>>> add_integer(2)
	100

Non-numbers
===========

```add_integer``` expects either integers or floats or both as arguments.
If either argument is non-integer and non-float, a TypeError is raised.

::

	>>> add_integer("hi", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(3, "hi")
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2.3, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

	>>> add_integer("hi", "hello")
	Traceback (most recent call last):
	TypeError: a must be an integer

The function fails if infinity is provided

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(2, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

The function fails if NaN numbers are provided

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

::

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
